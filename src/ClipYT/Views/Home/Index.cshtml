@using ClipYT.Constants;
@model MediaFileModel

<div class="d-flex flex-column align-items-center">
    <div class="mb-4" id="player-container">
        <div id="yt-player"></div>
    </div>

    <form id="app-form" method="post">
        <div class="d-flex flex-column mb-3">
            <div class="d-flex gap-3">
                @Html.TextBoxFor(m => m.Url, new { id = "urlInput", placeholder = "AISEM TIBITI OOOOOO" })
                <button title="Generate clip" id="submit-button" class="play-button"><i class="bi bi-play-circle-fill"></i></button>
            </div>
            <span id="url-validation-message" class="text-danger validation-message">@Html.ValidationMessageFor(m => m.Url)</span>
        </div>

        <div id="video-details">
            <div class="d-flex gap-3 justify-content-between flex-wrap mb-3">
                <div class="d-flex flex-column">
                    <div class="input-wrapper">
                        <span class="label-text">Clip start</span>
                        <div>
                            @Html.TextBoxFor(m => m.StartTimestamp, new { id = "videoStartInput", placeholder = "hh:mm:ss", @class = "timeInput" })
                            <button type="button" id="get-current-start-btn" title="Get current time" class="btn standard-btn" onclick="updateInputFromPlayer('videoStartInput')"><i class="bi bi-box-arrow-in-down-left"></i></button>
                        </div>
                    </div>
                    <span class="text-danger ">@Html.ValidationMessageFor(m => m.StartTimestamp)</span>
                </div>

                <div class="d-flex flex-column">
                    <div class="input-wrapper">
                        <span class="label-text">Clip end</span>
                        <div>
                            @Html.TextBoxFor(m => m.EndTimestamp, new { id = "videoEndInput", placeholder = "hh:mm:ss", @class = "timeInput" })
                            <button type="button" id="get-current-end-btn" title="Get current time" class="btn standard-btn" onclick="updateInputFromPlayer('videoEndInput')"><i class="bi bi-box-arrow-in-down-left"></i></button>
                        </div>
                    </div>
                    <span class="text-danger ">@Html.ValidationMessageFor(m => m.EndTimestamp)</span>
                </div>

                <div class="d-flex flex-column">
                    <div class="input-wrapper">
                        <span class="label-text">Length (s)</span>
                        @Html.TextBoxFor(m => m.ClipLength, new { id = "videoLengthInput" })
                    </div>
                    <span class="text-danger ">@Html.ValidationMessageFor(m => m.ClipLength)</span>
                </div>
            </div>

            <div class="d-flex justify-content-between flex-wrap gap-3">
                <div class="input-wrapper">
                    <span class="label-text">Format</span>
                    <div class="radio-wrapper">
                        @foreach (var value in Enum.GetValues(typeof(ClipYT.Enums.Format)))
                        {
                            <div class="radio-option">
                                @Html.RadioButtonFor(m => m.Format, value, new { @class = "radio-input" })
                                <div class="radio-btn">
                                    <span class="radio-span">@value.ToString()</span>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="input-wrapper">
                    <span class="label-text">Quality</span>
                    <div class="radio-wrapper">
                        @foreach (var value in Enum.GetValues(typeof(ClipYT.Enums.Quality)))
                        {
                            <div class="radio-option">
                                @Html.RadioButtonFor(m => m.Quality, value, new { @class = "radio-input" })
                                <div class="radio-btn">
                                    <span class="radio-span">@value.ToString()</span>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<div id="app-data"
     data-yt-regex="@RegexConstants.YoutubeUrlRegex"
     data-tiktok-regex="@RegexConstants.TiktokUrlRegex"
     data-twitter-regex="@RegexConstants.TwitterUrlRegex"
     data-time-format-regex="@RegexConstants.TimeFormatRegex"
     data-clipyt-logo="@Url.Content("~/images/clipyt_logo_vectorized.svg")"
     data-cliptok-logo="@Url.Content("~/images/cliptok_logo_vectorized.svg")"
     data-clipx-logo="@Url.Content("~/images/clipx_logo_vectorized.svg")"
     data-download-url="@Url.Action("DownloadFile")"
     data-mp3-format="@ClipYT.Enums.Format.MP3.ToString()">
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/yt-player.js"></script>
    <script src="https://www.youtube.com/iframe_api"></script>
    <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
    <script src="~/js/url-input-listener.js"></script>
    <script src="~/js/video-time-controls.js"></script>
    <script src="~/js/ajax-download.js"></script>
}
